
#include "bbs.h"
int reprint;  /*  이것은 화면 재표시에 관한 매개변수입니다. */

display_cboard(direc)
char *direc;
{
    FILE *fp1;
    char buf[255];
    int back,i; 
    /* 처음 게시판 들어오면 그 게시판 화일헤더가 만들어져야 한다
	없다면 만들고 있다면.. 있는거다... 이 작업은 display_board에서만
	처음 이루어진다. 왜냐하면.. 화일헤더는 중요한 것이기 때문에
	자주 이루어져서.. 손상이 가면 안되기 때문이다. */
    CRT=15;
    sprintf(buf,"%s/%s",direc,cnmenu->ccode); 
    if((fp1=fopen(buf,"r+"))==NULL) {
	fp1=fopen(buf,"a+");
    }
    li[0]='\0';  /* 이것을 초기화해야 전체 타이틀이 나오겠지요? */
    lt[0]='\0';
    if(!fseek(fp1,0,SEEK_END)) {
	now_num=top_num=ftell(fp1)/sizeof(struct dis_list);
    }
    else {
	printf("\r\n %s화일이 열리지 않습니다.",cnmenu->ccode);
    }
    fclose(fp1);
    back=0; /* 명령어 지울 때 사용할 것임 */
    reprint=YEA;
    esc_flag=0;
    while(1) {
	if(reprint) {
	    cls();
	    printf("\r\n"); /* 맨 위 한줄은 띄운다 */
	    list_ctitle(direc); /* now_num(전역변수)이 매개변수가 된다.*/
	    printf("%s",HELPLINE);
	    printf("\r\n %s>> ",cnmenu->ccode);
            reprint=NA;
	}
	else {
	    for(i=0; i<back; i++) {
	    	printf("\b \b");
	    }
	}
	lineinput(buf,20,YEA);
	back=strlen(buf);
	if((cnmenu->form=='f' || cnmenu->form=='F'))
	    cdocommand(buf,cfilecmd);
	if((cnmenu->form=='l' ||cnmenu->form=='L'))
	    cdocommand(buf,cboardcmd);
	if(buf[0]=='\0') {   /* 게시물 타이틀보여주기에서 [return]지원 */
	    if(now_num>0) { now_num= now_num-CRT;}
	    if(now_num<0) now_num=1;
	    reprint= YEA;
	}
	if(esc_flag) {
	    break;
	}
    }
}

display_ctitle(struct dis_list title)
{
    	struct tm *tp;

	if(cnmenu->form=='l'||cnmenu->form=='L') {
            if((title.look>=0) || (pf.level >= cfg.del)) {
                if(title.look<0) strcpy(title.title,"** 삭제 되었음 **");
                tp = localtime(&title.date);
		if(!strcmp(li,title.id) || li[0]=='\0' ) {
                    printf("\r\n%4d %-8s %02d/%02d/%02d%4d%3d%3d %-40s", 
                    title.num,title.id,tp->tm_year,tp->tm_mon+1,tp->tm_mday,
                    title.line,title.look,title.feel,title.title);
		}
    	    }
/*            if((title.look<=0)&&(pf.level <=cfg.del)) return 0; */
/*만일 삭제되었는데 삭제권한이 없는 사람이 본다면 0을 보내서
한라인 더 출력할 수 있게 i를 감소시킨다 */
	    return 1;
	}
	else if(cnmenu->form=='f'||cnmenu->form=='F') {
	    if((title.look>=0) || (pf.level >= cfg.del)) {
                tp = localtime(&title.date);
                if(title.look<0) strcpy(title.title,"***삭제된 화일임***");
                printf("\r\n%4d %-8s %15s %7ld%3d %-30s", 
                    title.num,title.id,
                    title.filename,title.file_size,title.down,title.title);
	    }	
/*	    if((title.look<=0) && (pf.level <=cfg.del)) return 0;  */
	    return 1;
	}   
	else return 1;
/* 아무것도 아니면.. 그래도 출력회수를 줄여야한다. 아니면
			무한루프에 빠진다. */	
}

list_ctitle(direc)
char *direc;
{
    FILE *fp1;
    int i,linenum;
    char buf[80];
    struct tm *tp;
    linenum=now_num;
    if (linenum<=10) linenum=10;

    sprintf(buf,"%s/%s",direc,cnmenu->ccode);
    if((fp1=fopen(buf,"r")) ==NULL) {
        printf("\r\n 화일이 열리지 않습니다. 시솝에게 말해주세요.");
        printf("\r\n"); pressreturn();
        reprint=NA; 
    }
    fseek(fp1,0,2); 
    i = ftell(fp1) / sizeof(struct dis_list);
    if ( i<=linenum) linenum=i;
    printf("여기는 %s : %s 입니다.(%c) 게시판담당자(%s)",\
	cnmenu->list,cnmenu->ccode,cnmenu->form,cnmenu->manager);

    if (cnmenu->form=='f'||cnmenu->form=='F')
	printf("%s",FTITLELINE);
    else if(cnmenu->form=='l' || cnmenu->form=='L') 
 	printf("%s",TITLELINE);
    checkbufferint=1; /* 1로 세팅되어져야한다. */
    for(i=0; i<CRT;i++) {
        if(fseek(fp1,(linenum-1)*sizeof(struct dis_list),0)) {
            break;
        }
        else {
            fread((char*)&l_title,sizeof(struct dis_list),1,fp1);
            checkbufferint=display_ctitle(l_title);
            if(!checkbufferint) i--;  
        }
        --linenum;
    }
    fclose(fp1);
}

/* now_num을 매개변수로 쓰지 않은 것은. num이 적당하지 않은 것이면
now_num이 되서는 안되기 때문이다. 만일 적당한 num이면 
이곳에서 now_num은 num으로 바뀐다. */
display_ccontent(num,fl,direc)
int num;
int fl;
char *direc;
{
    int ie,count,key,i;
    FILE *fp1,*fp2;
    struct pread {
	long int fbp;
	long int fos;
	int ie;
	struct pread *next;
    } *fbp1, *fbp2;
    char buf[80],fname1[30],fname2[30];
    char c;
    char f;
    long int bfos,nfos;
    int LINELEN=13;
    f= cnmenu->form;
    if(num<1 || num>top_num) {
	mess_dis(2);
	reprint=NA;
    }
    else if ( (cnmenu->form =='L') || (cnmenu->form=='l' && circlecheck)||\
	  (cnmenu->form=='F') || (cnmenu->form=='f' && circlecheck)) { 
	reprint=NA;
	now_num=num;  /* 현재의 번호를 게시물 번호로 수정 */
	sprintf(fname1,"%s/%s",direc,cnmenu->ccode);
	if((fp1=fopen(fname1,"r+"))==NULL) {
	    fp1=fopen(fname1,"a+");
 	}
	if(fseek(fp1,(now_num-1)*sizeof(struct dis_list),0)) {
	    printf("\r\nnfseek에러");
	}
	if(!fread((char*)&l_title,sizeof(struct dis_list),1,fp1)) {
	    printf("\r\nfread에러 ");
	}
	fclose(fp1);  /* 화일 닫았다. */
	if((l_title.look >=0) || (pf.level > cfg.del)) {
	    if(l_title.look >=0) {
		++l_title.look;
	    }
	    ie = 0;
	    if(fl) {   /* 페이지 출력의 경우이다. */
		count=LINELEN+1;
	    }
	    else {
		count = -1;   /* 연속 출력일 경우이다. */
	    }
	    sprintf(fname2,"%s/%s",direc,l_title.bfilename);
	    fp2=fopen(fname2,"r");  /* 화일 읽기 위해 열었다. */
	    fseek(fp2,0,2); l_title.size=ftell(fp2);
	    fseek(fp2,0,0);
	    if((fbp1=(struct pread*)malloc(sizeof(struct pread))) ==NULL) {
		printf("\r\n메모리 부족 ");
	    }
	    fbp1->next =fbp1;
	    fbp1->fbp = ftell(fp2);
	    fbp1->fos =0;
	    fbp1->ie = 0;
	    fbp2=fbp1;
            cls();
	    l_cdisp(ie);
	    esc_sub=0; /* 글 읽기 상태에서 벗어나는 매개변수 */
	    fos=0L;
	    key=1;
	    while(1) {
		if(fos<l_title.size && count && key) {
		    if((c=fgetc(fp2))=='\n') {
			putchar('\r');
			--count;
			++ie;
		    }
		    printf("%c",c);
		}
		else {
		    key=0;
		    count = LINELEN+1;
		    printf("%s",HELPLINE);
		    printf("\r\n >> ");
		    lineinput(buf,20,YEA);
		    if(buf[0] =='p' || buf[0] == 'P') {
			esc_sub=1;
			reprint = YEA;
		    }
		    else if(buf[0] =='b' || buf[0] == 'B') {
			fbp1=fbp1->next;
			fseek(fp2,fbp1->fbp,0);
			if(fbp2!=fbp1) {
			    free(fbp2);
			}
			fbp2=fbp1;
			fos = fbp1->fos;
			ie= fbp1->ie;
			cls();l_cdisp(ie); key=1;
		    }
		    else if((buf[0]=='f' || buf[0] =='F'||buf[0]=='\0')\
			&&fos<l_title.size ) {
			if((fbp2=(struct pread *)malloc(sizeof(struct pread))) 
			    ==NULL) {
			    printf("\r\n메모리 부족 ");
			} 
		        fbp2->fbp = ftell(fp2);
		        fbp2->next =fbp1;
		        fbp2->fos = fos;
		        fbp1= fbp2;
		        fbp1->ie = ie;
		        cls();l_cdisp(ie); key=1;
		    }
		    else if(buf[0]=='n' || buf[0]=='N') {
			return (num-1); /* 숫자를 하나 줄여 보낸다 */
		    }
		    else if(buf[0]=='a' || buf[0] =='A') {
			return (num+1);
		    }
		    else {
			if(cnmenu->form=='l' || cnmenu->form=='L')
			    cdocommand(buf,ccontentcmd);	
			else if (cnmenu->form=='f' || cnmenu->form == 'F') 
			    cdocommand(buf,cfcontentcmd);
		    }
		}    
		    
		if (esc_sub) break;
		if (fos<l_title.size) fos++;
	    }						 
	    while(fbp1->next !=fbp1) {
		fbp1=fbp1->next;
		free(fbp2);
		fbp2=fbp1;
	    }
	    free(fbp1);
	    if((pf.level > cfg.del) && (l_title.look<0)) {
		printf("\r\n 복구하시겠어요?(y/N)? ");
		lineinput(buf,1,YEA);
		if(buf[0] =='y' || buf[0] =='Y') {
		    l_title.look = 1;
		    printf("\r\n 복구되었어요.");
		}
	    }
	    fclose(fp2);
	    sprintf(fname1,"%s/%s",direc,cnmenu->ccode);
	    /* 조회수 증가 코드를 넣어라. */
	    fp1 = fopen(fname1,"r+");
            fseek(fp1,(now_num-1)*sizeof(struct dis_list),0);
            fwrite((char*)&l_title,sizeof(struct dis_list),1,fp1);
            fclose(fp1);
	    
	}
	else {    /* 이것은 볼수 없을 때이다. */
	    mess_dis(2);
	    now_num=num;
	    reprint = NA;
	}
    }
    else {
	mess_dis(4);
	reprint = NA;
    }
    return 0; /* 0을 보내면... 내용보기에서 나간다. */
}

l_cdisp(ie)
int ie;
{
    struct tm *tp,*localtime();
    int i;
    tp = localtime(&l_title.date);
 if(cnmenu->form=='l' || cnmenu->form=='L') {
    printf("\r\n제목: %-40s    줄수: %d/%d",l_title.title,ie,l_title.line);
    printf("\r\n번호: %4d    등록자: %-8s [%-8s] %2d/%02d/%02d  조회:%3d",
	l_title.num,l_title.name,l_title.id,tp->tm_year,tp->tm_mon+1,
	tp->tm_mday,l_title.look);
    printf("\r\n");for(i=0;i<80;i++) printf("-");printf("\r\n");
 }
 if(cnmenu->form=='f' || cnmenu->form=='F') {
    printf("번호 : %4d  등록자 : %-8s [%-8s]   화일 : %s줄수 : %d/%d",
    l_title.num,l_title.name,l_title.id,l_title.filename,ie,l_title.line);
    printf("\r\n날짜 : 19%2d-%02d-%02d %02d:%02d:%02d",
    tp->tm_year,tp->tm_mon+1,tp->tm_mday,tp->tm_hour,tp->tm_min,tp->tm_sec);
    printf("다운 : %d크기 : %d\r\n제목 : %s",
    l_title.down,l_title.file_size,l_title.title);
    printf("\r\n");for (i=0;i<80;i++) printf("-");
 }
}

