
#include "bbs.h"
void rmail()    /* 편지 읽기 */
{
    int i, j, k, select, back, key,fl;
    long int fos;
    char c, *buf, crt[3];
    FILE *fp1, *fp2;

    buf = tmp_buf;
    esc_flag = 0;
    sprintf(buf,"letter/%05d.mail",pf.num);
    if((fp1 = fopen(buf,"r+")) == NULL) {
        fp1 = fopen(buf,"a+");
    }
    li[0] = '\0';
    lt[0] = '\0';
    top_num = 0;
    if(!fseek(fp1,0,SEEK_END)) {
        now_num = top_num = ftell(fp1) / sizeof(struct mail);
        now_num = list_letter(fp1);
    }
    else {
        printf("\r\n화일 seek에 문제");
    }
    back = 0;
    key = 1;
    esc_flag = 0;
    while(1) {
        if(key) {
            printf("\r\n\n\r[번호/Enter] \241\262 B,LS,DIR,DD,T,P,A,N,GO,L,X,PR,LI,LT,도움말[H] \r\n>> ");
        }
        else {
            for(i = 0; i < back; i++) {
                putchar('\b'); putchar(' '); putchar('\b');
            }
        }
        lineinput(buf,25,YEA);
        back = strlen(buf);
        if((select = atoi(buf))== 0) {
            key = select_mmenu(fp1,buf);
        }
        else {
            fl = 1;
            key = dis_read(fp1,select,fl);
            esc_sub = 1;
            while(esc_sub) {
                if(key) {
                    printf("\r\n\r[번호/Enter]  B,T,LS,DIR,DD,P,GO,L,A,N,X,PR,LI,LT,도움말[H] \r\n>> ");
                }
                else {
                    for(i = 0; i < back; i++) {
                        putchar('\b'); putchar(' '); putchar('\b');
                    }
                }
                lineinput(buf,25,YEA);
                back = strlen(buf);
                if(buf[0] == '\0' || buf[0] == 'n' || buf[0] =='N') {
                    if(now_num > 1) {
                        --now_num;
                        fl = 1;
                        key = dis_read(fp1,now_num,fl);
                    }
                    else {
                        key = 0;

                        mess_dis(3);
                    }
                }
                else if((buf[0] == 'a' || buf[0] == 'A') && buf[1] == '\0') {
                    if(now_num < top_num) {
                        ++now_num;
                        fl = 1;
                        key = dis_read(fp1,now_num,fl);
                    }
                    else {
                        key = 0;
                        mess_dis(3);
                    }
                }
                else if((buf[0] == 'p' || buf[0] == 'P') && buf[1] == '\0') {
                    now_num = list_letter(fp1);
                    key = 1;
                    break;
                }
                else {
                    key = select_mmenu(fp1,buf);
                }
            }
        }
        if(esc_flag) {
            break;
        }
    }
    fclose(fp1);
}
select_mmenu(fp1,buf)   /* 명령어 처리 */
FILE *fp1;
char *buf;
{
    int i,j,key,back,fl=1;
    back = strlen(buf);
    if(!strncmp(buf,"li",2) || !strncmp(buf,"LI",2)) {  /* 게시물 아이디로 찾기 */
        lt[0] = '\0';
        for(i = 0; i <= back; i++) li[i] = '\0';
        for(i = 2; i < back; i++) {
            if(buf[i] != ' ') {
                for(j = i; j < back; j++) li[j-i] = buf[j];
                break;
            }
        }
        now_num = top_num;
        if(now_num > 0) {
            key = 1;
            now_num = list_letter(fp1);
        }
        else {
            mess_dis(3);
            key = 0;
        }
        esc_sub = 0;
    }
    else if(!strncmp(buf,"lt",2) || !strncmp(buf,"LT",2)) { /* 게시물 제목문자열로 찾기 */
        li[0] = '\0';
        for(i = 0; i <= back; i++) lt[i] = '\0';
        for(i = 2; i < back; i++) {
            if(buf[i] != ' ') {
                for(j = i; j < back; j++) lt[j-i] = buf[j];
                break;
            }
        }
        now_num = top_num;
        if(now_num > 0) {
            key = 1;
            now_num = list_letter(fp1);
        }
        else {
            mess_dis(3);
            key = 0;

        }
        esc_sub = 0;
    }
    else {
        for(i = 0; i < back; i++) { /* 입력문자를 소문자로 */
            buf[i] = tolower(buf[i]);
        }
        if(buf[0] == '\0' || buf[0] == 'f') {    /* 다음 편지 읽기 */
            if(now_num > 0) {
                key = 1;
                now_num = list_letter(fp1);
            }
            else {
                mess_dis(3);
                key = 0;
            }
        }
        else if(buf[0] == 'b') {
            now_num = now_num + CRT *2;
            esc_sub = 0;
            if(now_num > top_num) now_num = top_num;
            if(now_num > 0) {
                key = 1;
                now_num = list_letter(fp1);
            }
            else {
                mess_dis(3);
                key = 0;
            }
        }
        else if(!strncmp(buf,"ls",2)) { /* 편지 목록 */
            buf[0] = ' '; buf[1] = ' ';
            i = atoi(buf);
            key = 1;
            esc_sub = 0;

            if(i >=top_num) {
                now_num = top_num;
            }
            else if(i != 0) {
                now_num = i;
            }
            now_num = list_letter(fp1);
        }
        else if(!strcmp(buf,"dir")) {
            key = 1;
            esc_sub = 0;
            now_num = top_num;
            now_num = list_letter(fp1);
        }
        else if(!strcmp(buf,"dd")) {
            buf[0] = ' '; buf[1] = ' ';
            i = atoi(buf);
            if(i == 0) i = now_num;
            if((i > 0) && (i <= top_num)) {
                fseek(fp1,(i-1) * sizeof(struct mail),SEEK_SET);

                fread((char*)&letter,sizeof(struct mail),1,fp1);
                letter.T = 'd';
                fseek(fp1,(i-1) * sizeof(struct mail),SEEK_SET);
                fwrite((char*)&letter,sizeof(struct mail),1,fp1);
        printf("%4d번 삭제됨",i);
                key = 0;
            }
            else {
                mess_dis(2);
                key = 0;
            }
        }
        else if(!strcmp(buf,"p")) {
            esc_flag = 1;
        }
        else if(!strcmp(buf,"h")) {
            logo("mailhelp.hlp",1);
            now_num = list_letter(fp1);
            key = 1;

        }
        else if(!strncmp(buf,"pr",2)) {
            buf[0] = ' '; buf[1] = ' ';
            i = atoi(buf);
            fl = 0;
            key = dis_read(fp1,i,fl);
        }
        else if(!strcmp(buf,"t")) {
            nmenu = menu;
            esc_sub = 0;
            esc_flag = 1;
        }
        else if(!strcmp(buf,"a")) { /* 앞메뉴 */
            if(nmenu->aeqp != NULL ) {
                nmenu = nmenu->aeqp;
                if((nmenu->form == 'R' || nmenu->form == 'E') && (nmenu->w > pf.level)) {
                    nmenu = nmenu->upp;
                }
                esc_flag = 1;
                esc_sub = 0;
            }
            else {
                mess_dis(1);
                key = 0;
            }
        }
        else if(!strcmp(buf,"n")) { /* 다음메뉴 */
            if(nmenu->neqp != NULL ) {
                nmenu = nmenu->neqp;
                if((nmenu->form == 'R' || nmenu->form == 'E') && (nmenu->w > pf.level)) {
                    nmenu = nmenu->upp;
                }
                esc_flag = 1;
                esc_sub = 0;
            }
            else {
                mess_dis(1);
                key = 0;
            }
        }
        else if(!strncmp(buf,"go",2)) {
            if(!go_select(buf)) {
                mess_dis(1);
                key = 0;
            }
            else {
                esc_flag = 1;
                esc_sub = 0;
            }
        }
        else if(buf[0] == 'x' || buf[0] == 'X') {    /* 프로그램 종료 */
            host_end_yn();
        }
        else {
            i = atoi(buf);
            if(i) {
                fl = 1;
                key = dis_read(fp1,i,fl);
            }

            else {
                key = 0;
            }
        }
    }
    return(key);
}
int list_letter(fp1)    /* 편지함 목록 출력 */
FILE *fp1;
{
    int i, j, o, l, m;
    struct tm *tp, *localtime();
    printf("%s님 편지함",pf.name);
    if(pf.flag & 0x10000) {
        printf("\n\n\r번호  보낸이  아이디       날짜          제             목                    ");
    }
    else {
        printf("\n");
    }
    for(i = 0; i < CRT; i++) {
        if(fseek(fp1,(now_num-1)*sizeof(struct mail),SEEK_SET)) {
            break;
        }
        else {
            fread((char*)&letter,sizeof(struct mail),1,fp1);
            if(li[0] != '\0') {
                j = strlen(li);
                if((letter.T != 'd') && !strncmp(li,letter.id,j)) {
                    tp = localtime(&letter.tf);

                    printf("\r\n%c%4d %-8s %-8s  %02d월%02d일 %s",letter.T,letter.num,
                      letter.name,letter.id,tp->tm_mon+1,tp->tm_mday,letter.title);
                }
                else --i;
            }
            else if(lt[0] != '\0') {
                o = 1;
                if(letter.T != 'd') {
                    j = strlen(lt);
                    l = strlen(letter.title) - j + 1;
                    for(m = 0; m < l; m++) {
                        if(!strncmp(lt,&letter.title[m],j)) {
                            tp = localtime(&letter.tf);
                printf("\r\n%c%4d %-8s %-8s  %2d월%02d일 %s",letter.T,letter.num,
                  letter.name,letter.id,tp->tm_mon+1,tp->tm_mday,letter.title);
                            o = 0;
                            break;
                        }
                    }
                }
                if(o) --i;
            }

            else if(letter.T != 'd') {
                tp = localtime(&letter.tf);
                printf("\r\n%c%4d %-8s %-8s  %2d월%02d일 %-s",letter.T,letter.num,
                  letter.name,letter.id,tp->tm_mon+1,tp->tm_mday,letter.title);
            }
            else {
                --i;
            }
            --now_num;
        }
    }
    return(now_num);
}

int dis_read(fp1,select,fl) /* 편지 내용 읽기 */
FILE *fp1;
int select;
int fl;
{
    long int fos;
    int count, ie, key;
    struct pread{
        long int fbp;
        long int fos;
        struct pread *next;
    } *fbp1, *fbp2;
    char c, *buf;
    FILE *fp2;
    buf = tmp_buf;
    if(select < 1 || select > top_num) {
        mess_dis(2);
        key = 0;
    }
    else {
        key = 1;
        if(fseek(fp1,(select-1)*sizeof(struct mail),0)) {
            printf("\r\nfseek에 문제가 있습니다.");

        }
        if(!fread((char*)&letter,sizeof(struct mail),1,fp1)) {
            printf("\r\n화일 읽기fread에 문제가 있습니다.");
        }
        if(letter.T != 'd') {
            if(fl) {
                count = CRT + 2;
            }
            else {
                count = -1;
            }
            sprintf(buf,"letter/%05d.txt",pf.num);
            fp2 = fopen(buf,"r");
            fseek(fp2,letter.point,SEEK_SET);
            if((fbp1 = (struct pread *)malloc(sizeof(struct pread))) == NULL) {
                printf("\r\n메모리 부족");
            }
            fbp1->next = fbp1;

            fbp1->fbp = ftell(fp2);
            fbp1->fos = 0;
            fbp2 = fbp1;
	    cls();
            dis_top();
            for(fos = 0L; fos < letter.size; fos++) {
                if((c = fgetc(fp2)) == '\n') {
                    putchar('\r');
                    --count;
                }
                if(count) {
                    putchar(c);
                }
                else {
                    count = CRT + 2;
            printf("\r\n\r계속[엔터] 이전[B] 연속[S] 중지[P] : ");
                    lineinput(buf,1,YEA);
		    printf("\r\n");
                    if(buf[0] == 'p' || buf[0] == 'P') {
                        break;
                    }
                    else if(buf[0] == 'b' || buf[0] == 'B') {
                        fbp1 = fbp1->next;
                        fseek(fp2,fbp1->fbp,0);

                        if(fbp2 != fbp1) {
                            free(fbp2);
                        }
                        fbp2 = fbp1;
                        fos = fbp1->fos;
                        dis_top();
                    }
                    else if(buf[0] == 's' || buf[0] == 'S') {
                        printf("\r\n");
                        count = -1;
                    }
                    else {
                        if((fbp2 = (struct pread *)malloc(sizeof(struct pread))) == NULL) {
                            printf("\r\n메모리 부족");
                        }
                        fbp2->fbp = ftell(fp2);
                        fbp2->next = fbp1;
                        fbp2->fos = fos;
                        fbp1 = fbp2;
                        dis_top();
                    }

                }
            }
            fclose(fp2);
            if(letter.T == '*') {
                letter.T = 'T';
                sprintf(buf,"letter/%05d.chk",letter.id_num);
                if((fp2 = fopen(buf,"r+")) != NULL) {
                    while(fread((char*)&mail_chk,sizeof(struct mail_dis),1,fp2)) {
                        if(mail_chk.tf == letter.tf) {
                            time(&mail_chk.date);
                            fseek(fp2,-1*sizeof(struct mail_dis),SEEK_CUR);
                            fwrite((char*)&mail_chk,sizeof(struct mail_dis),1,fp2);
                            break;
                        }
                    }
                    fclose(fp2);
                }
                else {  /* 보낸편지확인 파일이 열리지 않았을때 */
                    printf("\r\n%s화일이 열리지 않습니다.",buf);
                }
                fseek(fp1,(select-1)*sizeof(struct mail),SEEK_SET);
                fwrite((char*)&letter,sizeof(struct mail),1,fp1);
            }
            while(fbp1->next != fbp1) {
                fbp1 = fbp1->next;
                free(fbp2);
                fbp2 = fbp1;
            }
            free(fbp1);
            now_num = select;
        }
        else {
            printf("\r\n삭제된 편지 \r\n");
            now_num = select;
            key = 0;
        }
    }
    return(key);
}
void oldwmail()    /* 편지 쓰기 */
{
    int i, j;
    char *buf, id[9];
    FILE *fp1, *fp2, *fp3;
    struct idst tmp_pf;
    struct tm *tp, *localtime();
    buf = tmp_buf;
    nmenu = nmenu->upp;
    printf("받을사람 ID : ");
    lineinput(mail_chk.id,9,YEA);
    if(strlen(mail_chk.id) > 2) {
        if((fp1 = fopen("bin/PASSWDS","r")) == NULL) {
            printf("\r\nPASSWDS 에러");
        }
        else {
            j = 1;
            while(fread((char*)&tmp_pf,sizeof(struct idst),1,fp1)) {
                if(!strcmp(mail_chk.id,tmp_pf.id)) {
                    fclose(fp1);
                    j = 0;
                    sprintf(mail_chk.name,tmp_pf.name);

                    if(!(tmp_pf.flag & 0x1000)) {
                        printf("\r\n%s님은 수신거부 상태입니다.",tmp_pf.name);
                        sleep(1);
                        break;
                    }
                    printf("\r\n\r%s님에게 편지를 보내시겠습니까(Y/n)? ",tmp_pf.name);
                    lineinput(buf,1,YEA);
                    if(buf[0] == 'n' || buf[0] == 'N') {
                        printf("\r\n편지 보내기를 취소하셨습니다.");
                        sleep(1);
                        break;
                    }
                    else {
                        printf("\r\n\r제목 : ");
                        lineinput(mail_chk.title,39,YEA);
                        sprintf(letter.title,"%s",mail_chk.title);
                        if(ma_write() == 1) {
                            time(&mail_chk.tf);
                            letter.tf = mail_chk.tf;
                            sprintf(letter.name,"%s",pf.name);
                            letter.T = '*';
                            sprintf(buf,"letter/%05d.txt",tmp_pf.num);

                            fp2 = fopen(buf,"a");
                            letter.point = ftell(fp2);
                            t_now = t_start;
                            while(t_now->right != '\0') {
                                fputs(t_now->text,fp2);
                                fputc('\r',fp2);
                                fputc('\n',fp2);
                                t_now = t_now->right;
                            }
                            letter.size = ftell(fp2) - letter.point;    /* 내용 길이 */
                            fclose(fp2);
                            sprintf(letter.id,"%s",pf.id);
                            letter.id_num = pf.num;
                            sprintf(buf,"letter/%05d.mail",tmp_pf.num);
                            fp1 = fopen(buf,"a");
                            letter.num = ftell(fp1) / sizeof(struct mail) + 1;
                            if(!fwrite((char*)&letter,sizeof(struct mail),1,fp1)) {
                                printf("\r\n화일 쓰기 실패");
                                err_off();
                            }
                            fclose(fp1);
                            i = 0;
                            mail_chk.date = '\0';

                            sprintf(buf,"letter/%05d.chk",pf.num);
                            fp1 = fopen(buf,"a");
                            if(!fwrite((char*)&mail_chk,sizeof(struct mail_dis),1,fp1)) {
                                printf("\r\n화일 쓰기 실패");
                                err_off();
                            }
                            fclose(fp1);
                            printf("\r\n %s님에게 편지를 보냈습니다.\r\n엔터키를 치십시오.",tmp_pf.name);
                            lineinput(buf,1,YEA);
                        }
                        unlink_text();
                    }
                    break;
                }
                else {
                    j = 1;
                }
            }
            if(j) {
                fclose(fp1);
                printf("\r\n%s회원이 존재하지 않습니다\r\n엔터키를 치십시오.",mail_chk.id);
                lineinput(buf,1,YEA);
            }

        }
    }
}
void cmail()  /* 보낸 편지 확인 */
{
    int i, top_num, back, key;
    char *buf;
    FILE *fp1;
    buf = tmp_buf;
    sprintf(buf,"letter/%05d.chk",pf.num);
    if((fp1 = fopen(buf,"r")) == NULL) {
        fp1 = fopen(buf,"a");
    }
    top_num = 0;
    if(fseek(fp1,0,2)) {
        printf("\n화일 포인터 변경 실패");
        err_off();
    }
    else {
        now_num = top_num = ftell(fp1) / sizeof(struct mail_dis);
        now_num = list_chk(fp1);
    }
    back = 0;
    key = 1;
    while(1) {

        if(key) {
            printf("\r\n엔터 목록[DIR] 상위[P] 초기[T] : ");
        }
        else {
            for(i = 0; i < back; i++) {
                putchar('\b'); putchar(' '); putchar('\b');
            }
        }
        lineinput(buf,25,YEA);
        back = strlen(buf);
        for(i = 0; i < back; i++) buf[i] = tolower(buf[i]);
        if(!strcmp(buf,"dir")) {
            key = 1;
            now_num = top_num;
            now_num = list_chk(fp1);
        }
        else if(buf[0] == '\0') {
            if(now_num > 0) {
                key = 1;
                now_num = list_chk(fp1);

            }
            else {
                mess_dis(3);
                key = 0;
            }
        }
        else if(!strcmp(buf,"p")) {
            nmenu = nmenu->upp;
            break;
        }
        else if(!strcmp(buf,"t")) {
            mtop = nmenu = menu;
            esc_sub = 0;
            esc_flag = 1;
            break;
        }
        else {

            key = 0;
        }
    }
    fclose(fp1);
}

list_chk(fp1)   /* 보낸편지 확인 목록 */
FILE *fp1;
{
    int i;
    struct tm *tp, *localtime();
    printf(" 이  름    아이디   보낸날짜  읽은날짜           제      목\r\n");
    for(i = 0; i < CRT; i++) {
        if(fseek(fp1,(now_num-1)*sizeof(struct mail_dis),0)) {
            break;
        }
        else {
            fread((char*)&mail_chk,sizeof(struct mail_dis),1,fp1);
            tp = localtime(&mail_chk.tf);
            printf("\r\n%-8s  %-8s  %2d월%2d일  ",mail_chk.name,mail_chk.id,
            tp->tm_mon+1,tp->tm_mday);
            if(mail_chk.date == '\0') {
                printf("[안읽음]%s",mail_chk.title);
            }
            else {
                tp = localtime(&mail_chk.date);
                printf("%2d월%2d일 %s",tp->tm_mon+1,tp->tm_mday,mail_chk.title);
            }
        }

        --now_num;
    }
    return(now_num);
}


dis_top()
{
    printf("");
    printf("%d번 %-9s %s\r\n\n",letter.num,letter.id,letter.title);
}

/* 이것은 다중 메일을 가능하게 하는 함수이다. */
char member[20][30]; /* 이것은 다중 메일을 보내기 위해서 아이디를 저장 */
void wmail(char *cmd)  /* towhom은 다중 사용자 이름이다. */
{
    int i, j;
    char buf[200],buf2[200], id[9],tmp[200];
    FILE *fp1, *fp2, *fp3;
    struct idst tmp_pf;
    struct tm *tp, *localtime();
    int howmany = 0,k;
    int len;
    int c;
    int check=0; 
    char ch;
    struct mailist mailgroup;
    /* 이부분은 @로 시작하는 주소록을 통한 메일보내기다. */
    if(cmd[0]=='@') {
	sprintf(buf,"user/mail%s.mil",pf.id);
	fp1 = fopen(buf,"r");
        fseek(fp1,0,0);
	    printf("\r\n 메일링리스트를 살펴보고 있습니다.");
	    while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
	 	if(!strcmp(mailgroup.group,cmd)) {
		    sprintf(cmd,"%s",mailgroup.towhom);
		printf("\r\n 메일링리스트에서 찾았습니다.");
		check=1;
	   	break;
	 	}
	    }
    }
    fclose(fp1);
    if(cmd[0]=='!'&&check==0) { /* 이것은 전체 주소록이다. 운영진이 작성 */
	sprintf(buf,"user/MAILIST");
	fp1 = fopen(buf,"r");
	fseek(fp1,0,0);
	printf("\r\n 전체주소록에서 살펴보고 있습니다.");
	while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
	    if(!strcmp(mailgroup.group,cmd)) {
	        sprintf(cmd,"%s",mailgroup.towhom);
  	        printf("\r\n 전체주소록에서 찾았습니다.");
	        break;
	    } 
	}
    }	
    fclose(fp1);
    if(strlen(cmd) > 2) {
    /* 편지를 쓰는 항목입니다. */
                        printf("\r\n\r제목 : ");
                        lineinput(mail_chk.title,39,YEA);
                        sprintf(letter.title,"%s",mail_chk.title);
                        if(ma_write() == 1) {
				len = strlen(cmd);
				printf("\r\n 글자수 %d입니다.",len);
				pressreturn();
				for(k=0;k<len;k++) {
				    if( cmd[k] !=' ') {
					i = 0;
				 	while(cmd[k] !=' ' && k<len) {
					    member[howmany][i] = cmd[k];
					    k++;
					    i++;
					}
					member[howmany][i] = '\0';
					printf("\r\n %s",member[howmany]);
					howmany++;
				    }
				}
			    printf("\r\n %d명에게 편지를 보냅니다.",howmany);
			    pressreturn();
			    for(i=0;i<howmany;i++) {
				sprintf(mail_chk.id,"%s",member[i]);
				fp1 = fopen("bin/PASSWDS","r");
				check =0;
				while(fread((char*)&tmp_pf,sizeof(struct\
				  idst),1,fp1)) {
				    if(!strcmp(mail_chk.id,tmp_pf.id)) {
					printf("\r\n 아이디를 찾았어요.");
					sprintf(mail_chk.name,"%s",tmp_pf.name);
					check=1; break;
				    }
				}
				fclose(fp1);
				if(check) { /* 편지를 보낸다. */
                                    time(&mail_chk.tf);
                                    letter.tf = mail_chk.tf;
                                    sprintf(letter.name,"%s",pf.name);
                                    letter.T = '*';
                                    sprintf(buf,"letter/%05d.txt",tmp_pf.num);
                                    fp2 = fopen(buf,"a");
                                    letter.point = ftell(fp2);
                                    t_now = t_start;
                                    while(t_now->right != '\0') {
                                        fputs(t_now->text,fp2);
                                        fputc('\r',fp2);
                                        fputc('\n',fp2);
                                        t_now = t_now->right;
                                    }
                                        /* 내용 길이 */
                                    letter.size = ftell(fp2) - letter.point;    
                                    fclose(fp2);
                                    sprintf(letter.id,"%s",pf.id);
                                    letter.id_num = pf.num;
                                    sprintf(buf,"letter/%05d.mail",tmp_pf.num);
                                    fp1 = fopen(buf,"a");
                                    letter.num = ftell(fp1) /\
			              sizeof(struct mail) + 1;
                                    if(!fwrite((char*)&letter,\
				      sizeof(struct mail),1,fp1)) {
                                        printf("\r\n화일 쓰기 실패");
                                        err_off();
                                    }
                                    fclose(fp1);
                                    mail_chk.date = '\0';
                                    sprintf(buf,"letter/%05d.chk",pf.num);
                                    fp1 = fopen(buf,"a");
                                    if(!fwrite((char*)&mail_chk,\
				      sizeof(struct mail_dis),1,fp1)) {
                                        printf("\r\n화일 쓰기 실패");
                                        err_off();
                                    }
                                    fclose(fp1);
                                    printf("\r\n %d번째 %s님에게 편지를 보냈습니다.",\
				      i,tmp_pf.id);
				}
			    }
                        }
			unlink_text();
    }
}

editmailist(char*cmd)
{
    FILE *fp1;
    char buf[80],buf2[80];
    struct mailist mailgroup;
    int fpos;

    sprintf(buf,"user/mail%s.mil",pf.id); /* 각자의 주소록을 연다. */
    if((fp1 = fopen(buf,"r+"))==NULL) {
	fp1 = fopen(buf,"a+");
    }
    if(fp1==NULL) {
	printf("\r\n 파일이 안 열립니다.");
	return;
    }
    while(1) {
	printf("\r\n 메일링리스트메뉴입니다.");
	printf("\r\n 하실일을 골라주세요. ");
	printf("\r\n (1) 수정 (2) 만들기 (3) 보여주기 (0)빠져나가기");
	printf("\r\n 하실일>> ");
 	keyinput(buf,10);
	if(buf[0]=='1') {
	    printf("\r\n 수정할 그룹을 적어주세요.>> ");
	    keyinput(buf,10);
	    fseek(fp1,0,0);
	    while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
		sprintf(buf2,"@%s",buf);
		if(ftell(fp1)) {
		    fpos = ftell(fp1) - sizeof(struct mailist);
		}
		else fpos = 0;

		if(!strcmp(buf2,mailgroup.group)) {
		    while(1) {
			printf("\r\n 수정메뉴입니다.");
			printf("\r\n (1) 추가 (2) 삭제 (0) 나가기");
			printf("\r\n >> ");
			keyinput(buf,10);
			if(buf[0]=='1') {
			    if(strlen(mailgroup.towhom)>990) {
				printf("\r\n 인원을 초과했습니다. ");
				break;
			    }
			    printf("\r\n 추가할 인원을 적어주세요.");
			    printf("\r\n 추가>> ");
			    keyinput(buf,80);
			    sprintf(buf2," %s",buf);
			    strcat(mailgroup.towhom,buf2);
			    fseek(fp1,fpos,0);
			    fwrite((char*)&mailgroup,sizeof(struct mailist),\
			      1,fp1);
			    printf("\r\n 추가가 끝났습니다.");
			}
			if(buf[0]=='2') {
			    printf("\r\n 아직 지원되지 않습니다.");
			}
			if(buf[0]=='0') {
			    printf("\r\n 나갑니다.");
			    break;
			}
		    }
		}
	    }
	    printf("\r\n 수정메뉴에서 나갑니다.");
	}
	else if(buf[0]=='2') {
	    while(1) {
	        printf("\r\n 주소록 이름-> ");
	        keyinput(buf,10);
		fseek(fp1,0,0);
		/* 주소록에 있는 것인가 확인한다. */
		while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
		    sprintf(buf2,"@%s",buf);
		    if(!strcmp(buf2,mailgroup.group)) {
			printf("\r\n 주소록에 같은 그룹이 있습니다.");
			printf("\r\n 주소록만들기에서 나갑니다.");
			pressreturn();
			return;
		    }
		}
	        if(buf[0]!='\0') {
		    sprintf(mailgroup.group,"@%s",buf);
		    printf("\r\n 주소록에 추가될 사람을 써주세요.");
		    printf("\r\n (e.g hommage sysop) >> ");
		    keyinput(buf,80);
		    sprintf(mailgroup.towhom,"%s",buf);
		    fseek(fp1,0,2);
		    fwrite((char*)&mailgroup,sizeof(struct mailist),1,fp1);
		    printf("\r\n 주소록에 추가했습니다.");
		    break;
		}
	        printf("\r\n 주소록 입력을 하시겠습니까?(y/N) ");
	        keyinput(buf,3);
		if(buf[0]!='y' && buf[0]!='Y') {
		    break;
		}
	    }
	}
 	else if(buf[0]=='3') {
	    fseek(fp1,0,0);
	    while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
		printf("\r\n %s",mailgroup.group);
		printf(" -> %s", mailgroup.towhom);
	    }
	}
	else if(buf[0]=='0') {
	    printf("\r\n 나갑니다.");
	    break;
	}
    }
    fclose(fp1);
    printf("\r\n 주소록관리에서 나갑니다.");
    pressreturn();

}

editMailist(char*cmd)
{
    FILE *fp1;
    char buf[80],buf2[80];
    struct mailist mailgroup;
    int fpos;

    sprintf(buf,"user/MAILIST"); /* 전체주소록 연다. */

    if((fp1 = fopen(buf,"r+"))==NULL) {
        fp1 = fopen(buf,"a+");
    }
    if(fp1==NULL) {
        printf("\r\n 파일이 안 열립니다.");
        return;
    }
    while(1) {
        printf("\r\n 메일링리스트메뉴입니다.");
        printf("\r\n 하실일을 골라주세요. ");
        printf("\r\n (1) 수정 (2) 만들기 (3) 보여주기 (0)빠져나가기");
        printf("\r\n 하실일>> ");
        keyinput(buf,10);
        if(buf[0]=='1') {
            printf("\r\n 수정할 그룹을 적어주세요.>> ");
            keyinput(buf,10);
            fseek(fp1,0,0);
            while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
                sprintf(buf2,"!%s",buf);
                if(ftell(fp1)) {
                    fpos = ftell(fp1) - sizeof(struct mailist);
                }
                else fpos = 0;

                if(!strcmp(buf2,mailgroup.group)) {

                    while(1) {
                        printf("\r\n 수정메뉴입니다.");
                        printf("\r\n (1) 추가 (2) 삭제 (0) 나가기");
                        printf("\r\n >> ");
                        keyinput(buf,10);
                        if(buf[0]=='1') {
                            if(strlen(mailgroup.towhom)>990) {
                                printf("\r\n 인원을 초과했습니다. ");
                                break;
                            }
                            printf("\r\n 추가할 인원을 적어주세요.");
                            printf("\r\n 추가>> ");
                            keyinput(buf,80);
                            sprintf(buf2," %s",buf);
                            strcat(mailgroup.towhom,buf2);
                            fseek(fp1,fpos,0);
                            fwrite((char*)&mailgroup,sizeof(struct mailist),\
                              1,fp1);
                            printf("\r\n 추가가 끝났습니다.");
                        }
                        if(buf[0]=='2') {
                            printf("\r\n 아직 지원되지 않습니다.");
                        }
                        if(buf[0]=='0') {
                            printf("\r\n 나갑니다.");
                            break;
                        }
                    }
                }
            }
            printf("\r\n 수정메뉴에서 나갑니다.");
        }
        else if(buf[0]=='2') {
            while(1) {
                printf("\r\n 주소록 이름-> ");
                keyinput(buf,10);
                fseek(fp1,0,0);
                /* 주소록에 있는 것인가 확인한다. */
                while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
                    sprintf(buf2,"!%s",buf);
                    if(!strcmp(buf2,mailgroup.group)) {
                        printf("\r\n 주소록에 같은 그룹이 있습니다.");
                        printf("\r\n 주소록만들기에서 나갑니다.");
                        pressreturn();
                        return;
                    }
                }
                if(buf[0]!='\0') {
                    sprintf(mailgroup.group,"@%s",buf);
                    printf("\r\n 주소록에 추가될 사람을 써주세요.");
                    printf("\r\n (e.g hommage sysop) >> ");
                    keyinput(buf,80);
                    sprintf(mailgroup.towhom,"%s",buf);
                    fseek(fp1,0,2);
                    fwrite((char*)&mailgroup,sizeof(struct mailist),1,fp1);
                    printf("\r\n 주소록에 추가했습니다.");
                    break;
                }
                printf("\r\n 주소록 입력을 하시겠습니까?(y/N) ");
                keyinput(buf,3);
                if(buf[0]!='y' && buf[0]!='Y') {
                    break;
                }
            }
        }
        else if(buf[0]=='3') {
            fseek(fp1,0,0);
            while(fread((char*)&mailgroup,sizeof(struct mailist),1,fp1)) {
                printf("\r\n %s",mailgroup.group);
                printf(" -> %s", mailgroup.towhom);
            }
        }
        else if(buf[0]=='0') {
            printf("\r\n 나갑니다.");
            break;
        }
    }
    fclose(fp1);
    printf("\r\n 주소록관리에서 나갑니다.");
    pressreturn();

}


